version: 2
jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.0
    steps:
      - checkout
      - run:
          name: Install coveralls
          command: |
            apt-get update
            apt-get install unzip
            
            curl -o dotnet-install.sh https://dotnetwebsite.azurewebsites.net/download/dotnet-core/scripts/v1/dotnet-install.sh
            chmod +x dotnet-install.sh
            export TERM=linux
            ./dotnet-install.sh --runtime dotnet --channel 2.1 --version latest --install-dir /usr/share/dotnet
            
            dotnet tool install coveralls.net --version 1.0.0 --tool-path coveralls

      - run:
          name: Build the projects
          command: |
            dotnet build -c Release

      - run:
          name: Run Unit Tests
          command: |
            cd src/tools.tests/SoloX.SlnAggregate.UTest
            dotnet test -c Release --no-build
            cd ../../..

            cd src/tools.tests/SoloX.SlnAggregate.ITest
            dotnet test -c Release --no-build
            cd ../../..

      - run:
          name: Run Code coverage
          command: |
            
            cd src/tools.tests/SoloX.SlnAggregate.UTest
            dotnet test -c Release --no-build -p:CollectCoverage=true -p:Exclude=\"[xunit.*]*,[SoloX.*.Sample]*,[SoloX.*.UTest]*,[SoloX.*.ITest]*\" -p:MergeWith="../../../result.coverlet.json" -p:CoverletOutput="../../../result.coverlet.json"
            cd ../../..

            cd src/tools.tests/SoloX.SlnAggregate.ITest
            dotnet test -c Release --no-build -p:CollectCoverage=true -p:Exclude=\"[xunit.*]*,[SoloX.*.Sample]*,[SoloX.*.UTest]*,[SoloX.*.ITest]*\" -p:MergeWith="../../../result.coverlet.json" -p:CoverletOutput="../../../result.opencover.xml" -p:CoverletOutputFormat="opencover"
            cd ../../..

            mkdir coverage
            cp result.opencover.xml coverage/result.opencover.xml
            coveralls/csmacnz.Coveralls --opencover -i coverage/result.opencover.xml --repoToken $COVERALLS_REPO_TOKEN --useRelativePaths --commitId $CIRCLE_SHA1 --commitBranch $CIRCLE_BRANCH --commitAuthor $CIRCLE_USERNAME --jobId $CIRCLE_BUILD_NUM --serviceName circleci
      - store_artifacts:
          path: coverage
      - run:
          name: Generate packages
          command: |
            mkdir packages
            cd src/tools/SoloX.SlnAggregate
            dotnet pack -c Release --no-build
            cd ../../..
            mv src/tools/SoloX.SlnAggregate/bin/Release/*.nupkg packages/
      - store_artifacts:
          path: packages